networks:
  # shared network for the assistant and webapp services
  gpt-assistant:
    driver: bridge

services:
  assistant:
    build: ./assistant # Builds the Docker image using the Dockerfile in the assistant directory
    restart: unless-stopped
    privileged: true # Gives the container permission to access to hardware
    volumes:
      - ./assistant/src:/app/src # Mount source code for real-time updates in the container
      - ./assistant/package.json:/app/package.json # Mount package.json
      - ./assistant/package-lock.json:/app/package-lock.json # Mount package-lock.json
      - ./config.json:/app/config.json # Mount the config file
      - /etc/asound.conf:/etc/asound.conf # Audio config needed for audio to work
      - /dev/snd:/dev/snd # Gives access to the sound devices on the host machine
      - /dev/shm:/dev/shm # Hardware that needs to be mounted for audio to work
      - /usr/share/alsa:/usr/share/alsa # alsa is for handling audio in Linux
      - /var/run/dbus:/var/run/dbus # allows programs on the same machine to communicate with each other
    networks:
      - gpt-assistant
    ports:
      - "8800:8800" # Maps port 8800 on the host to port 8800 in the container for websocket server
    tmpfs:
      - /run # Used to store temporary files that are deleted on reboot
      - /run/lock # Used for preventing concurrent access to resources
    stdin_open: true # Allows you to start an interactive session with the container
    tty: true # Allows terminal interaction
    command: bash # Overrides the default command and runs the bash shell
  webapp:
    build:
      context: ./webapp # Builds the Docker image using the Dockerfile in the webapp directory
      args:
        - NEXT_PUBLIC_ASSISTANT_WEBSOCKET_PORT=8800 # Sets the port the assistant websocket service is running on
    restart: unless-stopped
    volumes:
      - ./webapp/src:/app/src # Mount source code for real-time updates in the container
      - ./webapp/public:/app/public # Mount public directory
      - ./webapp/package.json:/app/package.json # Mount package.json
      - ./webapp/package-lock.json:/app/package-lock.json # Mount package-lock.json
      - ./config.json:/app/config.json # Mount the config file
    networks:
      - gpt-assistant
    ports:
      - "8900:3000" # Maps port 8900 on the host to port 3000 in the container
    stdin_open: true # Allows you to run commands interactively in the container. Ex: 'docker exec -it <container_id> bash'
    tty: true # Allows terminal interaction
    command: node server.js # created by next build from standalone output: https://nextjs.org/docs/pages/api-reference/next-config-js/output
